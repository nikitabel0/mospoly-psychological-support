"""implement rbac with permissions using native enum

Revision ID: 320096c5bd22
Revises: 6090345cb216
Create Date: 2025-10-27 07:14:20.052369

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '320096c5bd22'
down_revision: Union[str, Sequence[str], None] = '6090345cb216'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.Enum('APPOINTMENTS_CREATE_OWN', 'APPOINTMENTS_VIEW_OWN', 'APPOINTMENTS_CANCEL_OWN', 'APPOINTMENTS_CONFIRM_OWN', 'APPOINTMENTS_VIEW_PENDING', 'APPOINTMENTS_ACCEPT', 'APPOINTMENTS_RESCHEDULE', 'APPOINTMENTS_REJECT', 'APPOINTMENTS_VIEW_ALL', 'APPOINTMENTS_EDIT_ALL', 'APPOINTMENTS_DELETE_ALL', 'REVIEWS_CREATE_OWN', 'REVIEWS_VIEW_ALL', 'USERS_EDIT_OWN_PROFILE', 'THERAPISTS_EDIT_OWN_PROFILE', 'THERAPISTS_MANAGE', 'STATISTICS_VIEW', 'FAQ_EDIT', 'MATERIALS_CREATE', 'MATERIALS_EDIT', 'MATERIALS_DELETE', 'TESTS_CREATE', 'TESTS_EDIT', 'TESTS_DELETE', name='permissioncode'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('resource', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permissions_code'), 'permissions', ['code'], unique=True)
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_index(op.f('ix_permissions_resource'), 'permissions', ['resource'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.Enum('USER', 'PSYCHOLOGIST', 'HEAD_OF_PSYCHOLOGISTS', 'CONTENT_MANAGER', name='rolecode'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_code'), 'roles', ['code'], unique=True)
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_table('roles_permissions',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('users_roles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_roles')
    op.drop_table('roles_permissions')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_index(op.f('ix_roles_code'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_permissions_resource'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_code'), table_name='permissions')
    op.drop_table('permissions')
    # ### end Alembic commands ###
