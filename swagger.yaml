openapi: 3.0.0
info:
  title: Психологическая Служба API
  description: API для сервиса психологической помощи
  version: 1.0.0

servers:
  - url: http://localhost:8000
    description: Локальный сервер разработки
  - url: http://185.128.105.126:8000
    description: Сервер разработки

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        detail:
          type: string
          description: Описание ошибки

    UserBase:
      type: object
      properties:
        id:
          type: string
          format: uuid
        first_name:
          type: string
        middle_name:
          type: string
          nullable: true
        last_name:
          type: string
        phone_number:
          type: string
        email:
          type: string
          format: email
        social_media:
          type: string
          nullable: true
        password:
          type: string
          writeOnly: true

    UserCreateRequest:
      type: object
      required:
        - first_name
        - last_name
        - phone_number
        - email
        - password
        - role
      properties:
        first_name:
          type: string
          example: "Иван"
        middle_name:
          type: string
          nullable: true
          example: "Иванович"
        last_name:
          type: string
          example: "Иванов"
        phone_number:
          type: string
          example: "+79001234567"
        email:
          type: string
          format: email
          example: "ivan@example.com"
        password:
          type: string
          minLength: 8
          example: "strongPassword123"
        role:
          type: string
          enum: [Student, Therapist, Administrator, Stuff]
          example: "Student"

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "ivan@example.com"
        password:
          type: string
          example: "strongPassword123"

    TokenResponse:
      type: object
      properties:
        status_code:
          type: integer
          example: 200
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    AppointmentBase:
      type: object
      properties:
        id:
          type: string
          format: uuid
        patient_id:
          type: string
          format: uuid
        therapist_id:
          type: string
          format: uuid
        type:
          type: string
          enum: [Online, Offline]
        reason:
          type: string
          nullable: true
        status:
          type: string
          enum: [Accepted, Cancelled, Done]
        remind_time:
          type: string
          format: date-time
        last_change_time:
          type: string
          format: date-time
        venue:
          type: string

    AppointmentCreateRequest:
      type: object
      required:
        - patient_id
        - therapist_id
        - type
      properties:
        patient_id:
          type: string
          format: uuid
        therapist_id:
          type: string
          format: uuid
        type:
          type: string
          enum: [Online, Offline]
        reason:
          type: string
          nullable: true
        remind_time:
          type: string
          format: date-time
          nullable: true
        venue:
          type: string
          nullable: true

    AppointmentCreateResponse:
      type: object
      properties:
        appointment_id:
          type: string
          format: uuid

    ReviewsBase:
      type: object
      properties:
        appointment_id:
          type: string
          format: uuid
        time:
          type: string
          format: date-time
        content:
          type: string

    TherapistBase:
      type: object
      properties:
        id:
          type: string
          format: uuid
        experience:
          type: string
        qualification:
          type: string
        consult_areas:
          type: string
        description:
          type: string
        office:
          type: string

    RoleBase:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        role:
          type: string
          enum: [Student, Therapist, Administrator, Stuff]

paths:
  /users/user:
    get:
      tags:
        - users
      summary: Получить информацию о пользователе по email, id или токену.
      parameters:
        - name: email
          in: query
          required: false
          schema:
            type: string
            format: email
        - name: id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Информация о пользователе. Если нет email или id, то вернется информация о текущем пользователе по токену из куки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBase'
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/register:
    post:
      tags:
        - users
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appointments/{appointment_id}:
    get:
      tags:
        - appointments
      summary: Получить информацию о записи по ID
      parameters:
        - name: appointment_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Информация о записи
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentBase'
        '404':
          description: Запись не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appointments/create:
    post:
      tags:
        - appointments
      summary: Создать новую запись
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentCreateRequest'
      responses:
        '200':
          description: Запись успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentCreateResponse'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reviews/{appointment_id}:
    get:
      tags:
        - reviews
      summary: Получить отзыв по ID записи
      parameters:
        - name: appointment_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Информация об отзыве
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewsBase'
        '404':
          description: Отзыв не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /therapists/{therapist_id}:
    get:
      tags:
        - therapists
      summary: Получить информацию о психологе по ID
      parameters:
        - name: therapist_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Информация о психологе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TherapistBase'
        '404':
          description: Психолог не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /roles/{user_id}:
    get:
      tags:
        - roles
      summary: Получить роль пользователя по ID
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Информация о роли
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleBase'
        '404':
          description: Роль не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appointments/{appointment_id}/cancel:
    put:
      tags:
        - appointments
      summary: Отмена записи
      description: Отменяет существующую запись к психологу
      parameters:
        - name: appointment_id
          in: path
          required: true
          description: ID записи для отмены
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Запись успешно отменена
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Встреча успешно отменена"
        '404':
          description: Запись не найдена
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Встреча не найдена"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Внутренняя ошибка сервера"

tags:
  - name: users
    description: Операции с пользователями
  - name: appointments
    description: Операции со встречами
  - name: reviews
    description: Операции с отзывами
  - name: roles
    description: Операции с ролями пользователей